{"version":3,"sources":["components/Auth/LoginPage/index.js","components/Auth/SignUpPage/index.js","components/Common/sidebar.js","components/Common/topbar.js","components/Common/card.js","components/Dashboard/index.js","components/Home/index.js","components/NotFound/index.js","components/Users/index.js","App.js","serviceWorker.js","index.js"],"names":["LoginPage","SignUpPage","Sider","Layout","Sidebar","className","theme","mode","Item","key","icon","PlusOutlined","defaultSelectedKeys","Header","Search","Input","Topbar","placeholder","onSearch","value","console","log","UserOutlined","type","Panel","Collapse","Card","useState","activeKey","setActiveKey","accordion","bordered","showArrow","header","onMouseEnter","Content","Footer","Dashboard","style","marginLeft","position","margin","overflow","padding","textAlign","Home","NotFound","Users","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"js/main.0c898f51.chunk.js","sourcesContent":["import React from 'react';\n\nconst LoginPage = () => <div>LoginPage</div>\n\nexport default LoginPage;","import React from 'react';\n\nconst SignUpPage = () => <div>SignUpPage</div>\n\nexport default SignUpPage;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport '../../index.css';\nimport { Layout, Menu } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst { Sider } = Layout;\n\nconst Sidebar = () => {\n  return (\n    <Sider className=\"sidebar\">\n      <Menu theme=\"dark\" mode=\"inline\">\n        <div className=\"logo\" />\n        <Menu.Item key=\"new\" icon={<PlusOutlined />}>\n          New\n      </Menu.Item>\n      </Menu>\n      <Menu className=\"sidebar-scroll\" theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['all']} >\n        <Menu.Item key=\"all\">\n          All\n        </Menu.Item>\n        <Menu.Item key=\"1\">\n          Clink 1\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          Clink 2\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n          Clink 3\n        </Menu.Item>\n        <Menu.Item key=\"4\">\n          Clink 4\n        </Menu.Item>\n        <Menu.Item key=\"5\">\n          Clink 5\n        </Menu.Item>\n        <Menu.Item key=\"6\">\n          Clink 6\n        </Menu.Item>\n        <Menu.Item key=\"7\">\n          Clink 7\n        </Menu.Item>\n        <Menu.Item key=\"8\">\n          Clink 8\n        </Menu.Item>\n        <Menu.Item key=\"9\">\n          Clink 9\n        </Menu.Item>\n        <Menu.Item key=\"10\">\n          Clink 10\n        </Menu.Item>\n        <Menu.Item key=\"11\">\n          Clink 11\n        </Menu.Item>\n        <Menu.Item key=\"12\">\n          Clink 12\n        </Menu.Item>\n        <Menu.Item key=\"13\">\n          Clink 13\n        </Menu.Item>\n        <Menu.Item key=\"14\">\n          Clink 14\n        </Menu.Item>\n        <Menu.Item key=\"15\">\n          Clink 15\n        </Menu.Item>\n        <Menu.Item key=\"16\">\n          Clink 16\n        </Menu.Item>\n        <Menu.Item key=\"17\">\n          Clink 17\n        </Menu.Item>\n        <Menu.Item key=\"18\">\n          Clink 18\n        </Menu.Item>\n      </Menu>\n    </Sider >\n  )\n}\n\nexport default Sidebar;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport '../../index.css';\nimport { Layout, Menu, Input, Button } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Header } = Layout;\nconst { Search } = Input;\n\nconst Topbar = () => {\n  return (\n    <Header className=\"topbar-wrapper\">\n      <Menu theme=\"dark\" mode=\"inline\">\n        <Search\n          placeholder=\"Search in Title...\"\n          onSearch={value => console.log(value)}\n          className=\"top-search\"\n        />\n        <UserOutlined className=\"top-icon\"/>\n        <Button className=\"top-btn\" type=\"primary\">Log out</Button>\n      </Menu>\n      <Menu theme=\"dark\" mode=\"inline\">\n        <h1>TITLE</h1>\n      </Menu>\n    </Header>\n  )\n}\n\nexport default Topbar;","import React, {useState} from 'react';\nimport 'antd/dist/antd.css';\nimport '../../index.css';\nimport { Collapse } from 'antd';\n\nconst { Panel } = Collapse;\n\nconst Card = () => {\n  const [activeKey, setActiveKey] = useState('');\n\n  return(\n    <Collapse accordion bordered={false} activeKey={activeKey}>\n      <Panel showArrow={false} header={<div onMouseEnter={() => setActiveKey('1')}>This is panel header 1</div>} key=\"1\">\n        <p>Card 1 info</p>\n      </Panel>\n      <Panel showArrow={false} header={<div onMouseEnter={() => setActiveKey('2')}>This is panel header 1</div>} key=\"2\">\n        <p>Card 2 info</p>\n      </Panel>\n      <Panel showArrow={false} header={<div onMouseEnter={() => setActiveKey('3')}>This is panel header 1</div>} key=\"3\">\n        <p>Card 3 info</p>\n      </Panel>\n    </Collapse>\n  )\n}\n\nexport default Card","import React from 'react';\nimport 'antd/dist/antd.css';\nimport '../../index.css';\nimport { Layout } from 'antd';\nimport Sidebar from '../Common/sidebar';\nimport Topbar from '../Common/topbar';\nimport Card from '../Common/card';\n\nconst { Content, Footer } = Layout;\n\nconst Dashboard = () => {\n  return (\n    <Layout>\n      <Sidebar />\n      <Layout className=\"site-layout\" style={{ marginLeft: '200px' }}>\n      <Topbar />\n        <Content style={{ position: 'relative', margin: '24px 16px 0', overflow: 'initial' }}>\n          <div className=\"site-layout-background\" style={{ padding: '24px', textAlign: 'center' }}>\n\n          </div>\n          <Card />\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Clink</Footer>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\n\nconst Home = () => <div>Home</div>\n\nexport default Home;\n","import React from 'react';\n\nconst NotFound = () => <div>404 - Not Found</div>\n\nexport default NotFound;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport '../../index.css';\nimport { Layout } from 'antd';\nimport Sidebar from '../Common/sidebar';\nimport Topbar from '../Common/topbar';\n\nconst { Content, Footer } = Layout;\n\nconst Users = () => {\n  return (\n    <Layout>\n      <Sidebar />\n      <Layout className=\"site-layout\" style={{ marginLeft: '200px' }}>\n        <Topbar />\n        <Content style={{ position: 'relative', margin: '24px 16px 0', overflow: 'initial' }}>\n          <div className=\"site-layout-background\" style={{ padding: '24px', textAlign: 'center' }}>\n\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Clink</Footer>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Users;\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport LoginPage from './components/Auth/LoginPage';\nimport SignUpPage from './components/Auth/SignUpPage';\nimport Dashboard from './components/Dashboard';\nimport Home from './components/Home';\nimport NotFound from './components/NotFound';\nimport Users from './components/Users';\nimport './App.css';\n\nfunction App() {\n  \n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/sign-up\" component={SignUpPage} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/users\" component={Users} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}